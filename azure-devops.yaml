name: $(version)-$(Build.SourceBranchName).$(Build.BuildId)

pool:
  name: Minikube

variables:
- group: devops
- group: Surveyor
- name: version
  value: 0.2.0

stages:
- stage: Development
  jobs:
    - job: Build
      steps:
        - template: configure-version.yaml
          parameters:
            branch: ${{ Build.SourceBranchName }}
        - powershell: |
            echo "$(pat)" | az devops login --organization https://dev.azure.com/magnoxium/
            $projectVariables = az pipelines variable-group list --organization https://dev.azure.com/magnoxium/ --project Andersoft --group Surveyor | ConvertFrom-Json
            $options = @( 
              "--password=$(password)", 
              "--app_version=$(version)",
              "--test='Secret Password: Kubernetes'",
              "--target=Publish Image"
            )
            $projectVariables.variables.PSObject.Properties | where {$_.Value.value -ne $null} | forEach { $options+= "--$($_.Name)=$($_.Value.value)"  }
            .\build.ps1 @options
          displayName: 'Run Cake Build Script'
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'VSTest'
            searchFolder: './artifacts/test-results/'
            testResultsFiles: '*.trx'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: './artifacts/helm/'
            ArtifactName: 'helm'
            publishLocation: 'Container'
    - job: Deployment
      dependsOn: Build
      condition: succeeded()
      steps:
        - template: configure-version.yaml
        - powershell: |
            echo "$(pat)" | az devops login --organization https://dev.azure.com/magnoxium/
            $projectVariables = az pipelines variable-group list --organization https://dev.azure.com/magnoxium/ --project Andersoft --group Surveyor | ConvertFrom-Json
            $options = @( 
              "--password=$(password)", 
              "--app_version=$(version)",
              "--test='Secret Password: Kubernetes'",
              "--target=Deploy Helm Chart"
            )
            $projectVariables.variables.PSObject.Properties | where {$_.Value.value -ne $null} | forEach { $options+= "--$($_.Name)=$($_.Value.value)"  }
            .\build.ps1 @options
          displayName: 'Run Cake Deployment Script'